# SPDX-FileCopyrightText: The pasejo Authors
# SPDX-License-Identifier: 0BSD

name: Verify Commits
on:
  pull_request:
    branches: [ main ]
jobs:
  check:
    name: Check ${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            use-cross: true
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            use-cross: true
          - target: arm-unknown-linux-gnueabihf
            os: ubuntu-latest
            use-cross: true
          - target: arm-unknown-linux-musleabihf
            os: ubuntu-latest
            use-cross: true
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-pc-windows-gnu
            os: windows-latest
          - target: aarch64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    env:
      BUILD_COMMAND: cargo
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install cross
        if: matrix.use-cross
        uses: taiki-e/install-action@v2
        with:
          tool: cross
      - name: Overwrite build command env variable
        if: matrix.use-cross
        run: echo "BUILD_COMMAND=cross" >> $GITHUB_ENV
      - name: Set up Rust Target
        run: rustup target add ${{ matrix.target }}
      - name: Check Code
        shell: bash
        run: $BUILD_COMMAND check --release --target ${{ matrix.target }}
      - name: Test Code
        shell: bash
        run: $BUILD_COMMAND test
      - name: Build Code
        shell: bash
        run: $BUILD_COMMAND build --release --target ${{ matrix.target }}
